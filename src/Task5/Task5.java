package Task5;
//Учитывая массив целых чисел nums и целочисленную цель, верните индексы двух чисел так, чтобы их сумма составляла цель.
//
//        Вы можете предположить, что каждый вход будет иметь ровно одно решение, и вы не можете использовать один и тот же элемент дважды.
//
//        Вы можете вернуть ответ в любом порядке.
//
//        Пример 1:
//        Ввод: числа = [2,7,11,15], цель = 9
//        Выход: [0,1]
//        Объяснение: Поскольку nums[0] + nums[1] == 9, мы возвращаем [0, 1].
//
//        Пример 2:
//        Ввод: числа = [3,2,4], цель = 6
//        Выход: [1,2]
//
//        Пример 3:
//        Ввод: nums = [3,3], цель = 6
//        Выход: [0,1]
//
//        Ограничения:
//
//        2 <= числа.длина <= 10^4
//        -10^9 <= числа[i] <= 10^9
//        -10^9 <= цель <= 10^9
//        Существует только один действительный ответ.
//
//        Продолжение: можете ли вы придумать алгоритм, временная сложность которого меньше O(n^2)?
//
//        package Task5;

import java.util.*;

public class Task5 {
    public static void main(String[] args) {

    }
    public static int[] task5(int [] nums, int target) {
        for (int i = 0; i <= nums.length; i++) {
            for (int j = i+1; j <= nums.length; j++) {
                if (nums[i] + nums[j] == target ) {
                    return new int[] {i, j};
                }
            }
        }
        return new int[] {};
    }
}



